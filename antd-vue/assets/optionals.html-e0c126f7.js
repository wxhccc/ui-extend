import{_ as e,p as t,q as p,Q as n,t as s,v as o,a1 as l}from"./framework-d784189f.js";const c={},i={class:"custom-container warning"},r=n("p",{class:"custom-container-title"},"注意",-1),d=n("code",null,"ui-extend",-1),u=l(`<h2 id="使用方法" tabindex="-1"><a class="header-anchor" href="#使用方法" aria-hidden="true">#</a> 使用方法</h2><p>Optionals主要是提供了<strong>可选</strong>的便捷函数，可以更方便得使用本组件库。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createOption <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;ui-extend&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="方法列表" tabindex="-1"><a class="header-anchor" href="#方法列表" aria-hidden="true">#</a> 方法列表</h2><h3 id="createoption" tabindex="-1"><a class="header-anchor" href="#createoption" aria-hidden="true">#</a> createOption</h3><p>创建标准格式的option数据对象，通常用来生成下拉选项里的“全部”选项</p><p><strong>类型定义</strong>:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">declare</span> <span class="token keyword">const</span> <span class="token function-variable function">createOption</span> <span class="token operator">=</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token operator">|</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">,</span> label<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Option
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>参数</strong>:</p><ul><li><code>value</code> 返回对象的value值，默认为: 0</li><li><code>label</code> 返回对象的label值，默认为: &#39;全部&#39;</li></ul><p><strong>示例</strong>:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createOption <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;ui-extend&#39;</span>

<span class="token function">createOption</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// log { value: &#39;&#39;, label: &#39;全部&#39; }</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">类型定义中的相关接口/类型说明，下同</p><ul><li><code>FormItemProps</code>: 组建库的FormItem组建的props类型</li><li><code>CommonFieldProps</code>: CommonField组件的props类型</li><li><code>NamePath(string | number)</code>: FormItem组件的name/prop属性，同时也是对应表单域绑定值的key</li><li><code>FormFieldItemProps</code>: FormFieldItem组件的props类型</li><li><code>RuleObject</code>: FormItem组件props的rules属性的规则项</li><li><code>StrOrProps</code>: 字符串或者属性对象</li></ul></div><h3 id="createffirulesprops" tabindex="-1"><a class="header-anchor" href="#createffirulesprops" aria-hidden="true">#</a> <code>createFFIRulesProps</code></h3><p>生成<code>FormFieldItem</code>组件带验证规则的props属性对象</p><p><strong>类型定义</strong>:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">RuleRequired</span> <span class="token operator">=</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token punctuation">[</span><span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> RuleObject<span class="token punctuation">[</span><span class="token string">&#39;type&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span>

<span class="token keyword">function</span> <span class="token function">createFFIRulesProps</span><span class="token punctuation">(</span>
  label<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  requiredOrMsgOrWithType<span class="token operator">:</span> RuleRequired <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  rules<span class="token operator">:</span> RuleObject<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  others<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>FormItemProps<span class="token operator">&gt;</span>
<span class="token punctuation">)</span><span class="token operator">:</span> FormItemProps
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>参数</strong>:</p><ul><li><code>label</code> 表单项label内容。</li><li><code>required</code> 是否必填 / 未填时特定的提示文字 / [前两者，（数据的类型，默认string）]</li><li><code>rules</code> 表单项额外的rules数组</li><li><code>others</code> 配置对象中的其他属性，可覆盖已配置属性，当需要使用此选项时，直接写FormItemProps对象可能更直观。</li></ul><p><strong>示例</strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createFFIRulesProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;ui-extend&#39;</span>

<span class="token function">createFFIRulesProps</span><span class="token punctuation">(</span><span class="token string">&#39;姓名&#39;</span><span class="token punctuation">)</span>
<span class="token doc-comment comment">/** log 
<span class="token punctuation">{</span>
  label: &#39;姓名&#39;,
  rules: [
    <span class="token punctuation">{</span> required: true, message: &#39;请输入姓名&#39; <span class="token punctuation">}</span>
  ]
<span class="token punctuation">}</span>
**/</span>
<span class="token function">createFFIRulesProps</span><span class="token punctuation">(</span><span class="token string">&#39;年龄&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;请选择年龄&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">,</span> min<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> message<span class="token operator">:</span> <span class="token string">&#39;抱歉你的年龄小于10岁&#39;</span><span class="token punctuation">,</span> trigger<span class="token operator">:</span> <span class="token string">&#39;change&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> size<span class="token operator">:</span> <span class="token string">&#39;small&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token doc-comment comment">/** log 
<span class="token punctuation">{</span>
  label: &#39;姓名&#39;,
  rules: [
    <span class="token punctuation">{</span> required: true, message: &#39;请选择年龄&#39; <span class="token punctuation">}</span>,
    <span class="token punctuation">{</span> type: &#39;number&#39;, min: 10, message: &#39;抱歉你的年龄小于10岁&#39;, trigger: &#39;change&#39; <span class="token punctuation">}</span>
  ],
  size: &#39;small&#39;
<span class="token punctuation">}</span>
**/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="createformfielditem" tabindex="-1"><a class="header-anchor" href="#createformfielditem" aria-hidden="true">#</a> <code>createFormFieldItem</code></h3><p>生成<code>FormFieldItem</code>使用的配置数据对象</p><p><strong>类型定义</strong>:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">createFormFieldItem</span> <span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">FP</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
  component<span class="token operator">:</span> Component<span class="token punctuation">,</span>
  labelOrProps<span class="token operator">?</span><span class="token operator">:</span> StrOrProps<span class="token operator">&lt;</span>FormItemProps<span class="token operator">&gt;</span><span class="token punctuation">,</span>
  name<span class="token operator">?</span><span class="token operator">:</span> NamePath<span class="token punctuation">,</span>
  fieldExtra<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>CommonFieldProps<span class="token operator">&lt;</span><span class="token constant">V</span><span class="token punctuation">,</span> <span class="token constant">FP</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">,</span>
  extraProps<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>FormFieldItemProps<span class="token operator">&gt;</span>
<span class="token punctuation">)</span><span class="token operator">:</span> FormFieldItemProps
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>参数</strong>:</p><ul><li><code>component</code> 配置数据中field对象中的component属性，可以用组件字符串或传入组件对象。</li><li><code>labelOrProps</code> 表单项的label字符串，或者props参数对象</li><li><code>name</code> 配置对象的prop/name属性</li><li><code>fieldExtra</code> 配置对象的field对象中的其他属性，可覆盖已配置属性</li><li><code>extraProps</code> 配置对象中的其他属性，可覆盖已配置属性</li></ul><p><strong>示例</strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createFormFieldItem <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;ui-extend&#39;</span>

<span class="token keyword">import</span> CustomField <span class="token keyword">from</span> <span class="token string">&#39;...&#39;</span>

<span class="token function">createFormFieldItem</span><span class="token punctuation">(</span><span class="token string">&#39;ElInput&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;姓名&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> placeholder<span class="token operator">:</span> <span class="token string">&#39;请输入&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token doc-comment comment">/** log 
<span class="token punctuation">{</span>
  props: <span class="token punctuation">{</span> label: &#39;姓名&#39; <span class="token punctuation">}</span>,
  name: &#39;name&#39;,
  field: <span class="token punctuation">{</span>
    component: &#39;ElInput&#39;,
    placeholder: &#39;请输入&#39;
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
**/</span>
<span class="token function">createFormFieldItem</span><span class="token punctuation">(</span>CustomField<span class="token punctuation">,</span> <span class="token punctuation">{</span> label<span class="token operator">:</span> <span class="token string">&#39;自定义组件&#39;</span><span class="token punctuation">,</span> rules<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> props<span class="token operator">:</span> <span class="token punctuation">{</span> data<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token doc-comment comment">/** log 
<span class="token punctuation">{</span>
  props: <span class="token punctuation">{</span> label: &#39;自定义组件&#39;, rules: [] <span class="token punctuation">}</span>,
  name: &#39;foo&#39;,
  field: <span class="token punctuation">{</span>
    component: CustomField,
    // 和CommonFiled组件冲突的component组件的props，可以使用props传入
    props: <span class="token punctuation">{</span>
      data: []
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
**/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="createinputformitem" tabindex="-1"><a class="header-anchor" href="#createinputformitem" aria-hidden="true">#</a> <code>createInputFormItem</code></h3><p>基于<a href="#createformfielditem">createFormFieldItem</a>函数定制，用于创建输入框表单项配置数据。</p><p><strong>类型定义</strong>:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">createInputFormItem</span><span class="token punctuation">(</span>
  labelOrProps<span class="token operator">:</span> StrOrProps<span class="token operator">&lt;</span>FormItemProps<span class="token operator">&gt;</span><span class="token punctuation">,</span>
  name<span class="token operator">?</span><span class="token operator">:</span> NamePath<span class="token punctuation">,</span>
  phOrFieldProps<span class="token operator">?</span><span class="token operator">:</span> StrOrProps<span class="token operator">&lt;</span>Partial<span class="token operator">&lt;</span>CommonFieldProps<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> InputProps<span class="token operator">&gt;&gt;&gt;</span><span class="token punctuation">,</span>
  extraProps<span class="token operator">:</span> Partial<span class="token operator">&lt;</span>FormFieldItemProps<span class="token operator">&gt;</span>
<span class="token punctuation">)</span><span class="token operator">:</span> FormFieldItemProps
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>参数</strong>:</p><ul><li><code>labelOrProps</code> 表单项的label字符串，或者props参数对象</li><li><code>name</code> 配置对象的name/prop属性</li><li><code>phOrFieldProps</code> filed对象的props参数对象，或者filed.props对象placeholder参数</li><li><code>extraProps</code> 配置对象中的其他属性，可覆盖已配置属性</li></ul><p><strong>示例</strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createInputFormItem <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;ui-extend&#39;</span>

<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token function">createFFIRulesProps</span><span class="token punctuation">(</span><span class="token string">&#39;金额&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>

<span class="token function">createInputFormItem</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> <span class="token string">&#39;money&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;请输入金额&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> prevProp<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;people&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token doc-comment comment">/** log 
<span class="token punctuation">{</span>
  props: <span class="token punctuation">{</span>
    label: &#39;金额&#39;,
    rules: [
      <span class="token punctuation">{</span> required: true, message: &#39;请输入金额&#39;, trigger: &#39;blur&#39;<span class="token punctuation">}</span>
    ]
  <span class="token punctuation">}</span>,
  name: &#39;money&#39;,
  field: <span class="token punctuation">{</span>
    component: ElInput / AInput,
    props: <span class="token punctuation">{</span> placeholder: &#39;请输入金额&#39; <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>,
  prevProp: [&#39;people&#39;]
<span class="token punctuation">}</span>
**/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">后续函数的统一接口类型</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">CreateHasDataFormItem<span class="token operator">&lt;</span><span class="token constant">FE</span> <span class="token operator">=</span> Partial<span class="token operator">&lt;</span>CommonFieldProps<span class="token operator">&gt;&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token punctuation">(</span>

    <span class="token doc-comment comment">/** label 或FormItem组件props */</span>
    labelOrProps<span class="token operator">:</span> StrOrProps<span class="token operator">&lt;</span>FormItemProps<span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token doc-comment comment">/** 配置对象的name/prop属性 */</span>
    name<span class="token operator">?</span><span class="token operator">:</span> NamePath<span class="token punctuation">,</span>
    <span class="token doc-comment comment">/** 数据项数组 */</span>
    data<span class="token operator">?</span><span class="token operator">:</span> SelectOption<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">|</span> Option<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token doc-comment comment">/** 对应表单域的CommonFieldProps */</span>
    fieldExtra<span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">FE</span><span class="token punctuation">,</span>
    <span class="token doc-comment comment">/** FormFieldItem组件的其他props */</span>
    extraProps<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>FormFieldItemProps<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token operator">:</span> FormFieldItemProps
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h3 id="createradiogroupformitem" tabindex="-1"><a class="header-anchor" href="#createradiogroupformitem" aria-hidden="true">#</a> <code>createRadioGroupFormItem</code></h3><p>基于<a href="#createFormFieldItem">createFormFieldItem</a>函数定制，用于创建RadioGroup表单项配置数据。</p><p><strong>类型定义</strong>:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">createRadioGroupFormItem</span> <span class="token operator">=</span> CreateHasDataFormItem<span class="token operator">&lt;</span>
  Partial<span class="token operator">&lt;</span>CommonFieldProps<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token punctuation">,</span> RadioGroupProps<span class="token operator">&gt;&gt;</span>
<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>参数</strong>:</p><ul><li><code>labelOrProps</code> {String/Object} 表单项的label字符串，或者props参数对象</li><li><code>prop</code> {String} 配置对象的prop属性</li><li><code>data</code> {Array} filed对象的data参数对象数组</li><li><code>fieldExtra</code> {Object} 配置对象的field对象中的其他属性，可覆盖已配置属性</li><li><code>extraProps</code> {Object} 配置对象中的其他属性，可覆盖已配置属性</li></ul><h3 id="createcheckboxgroupformitem" tabindex="-1"><a class="header-anchor" href="#createcheckboxgroupformitem" aria-hidden="true">#</a> <code>createCheckboxGroupFormItem</code></h3><p>用于创建CheckboxGroup表单项配置数据。</p><p><strong>类型定义</strong>:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">createRadioGroupFormItem</span> <span class="token operator">=</span> CreateHasDataFormItem<span class="token operator">&lt;</span>
  Partial<span class="token operator">&lt;</span>CommonFieldProps<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token punctuation">,</span> CheckboxGroup<span class="token operator">&gt;&gt;</span>
<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="createselectformitem" tabindex="-1"><a class="header-anchor" href="#createselectformitem" aria-hidden="true">#</a> <code>createSelectFormItem</code></h3><p>用于创建Select表单项配置数据。</p><p><strong>类型定义</strong>:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">createSelectFormItem</span><span class="token punctuation">(</span>
  labelOrProps<span class="token operator">:</span> StrOrProps<span class="token operator">&lt;</span>FormItemProps<span class="token operator">&gt;</span><span class="token punctuation">,</span>
  name<span class="token operator">?</span><span class="token operator">:</span> NamePath<span class="token punctuation">,</span>
  data<span class="token operator">?</span><span class="token operator">:</span> SelectOption<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  phOrFieldProps<span class="token operator">?</span><span class="token operator">:</span> StrOrProps<span class="token operator">&lt;</span>Partial<span class="token operator">&lt;</span>CommonFieldProps<span class="token operator">&lt;</span>StrOrNum<span class="token punctuation">,</span> SelectProps<span class="token operator">&gt;&gt;&gt;</span><span class="token punctuation">,</span>
  extraProps<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>FormFieldItemProps<span class="token operator">&gt;</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>参数</strong>:</p><ul><li><code>labelOrProps</code> 表单项的label字符串，或者props参数对象</li><li><code>name</code> 配置对象的prop属性</li><li><code>data</code> filed对象的data参数对象数组</li><li><code>phOrFieldProps</code> filed对象的props参数对象，或者filed.props对象placeholder参数</li><li><code>fieldExtra</code> 配置对象的field对象中的其他属性，可覆盖已配置属性</li><li><code>extraProps</code> 配置对象中的其他属性，可覆盖已配置属性</li></ul><h3 id="createdateformitem" tabindex="-1"><a class="header-anchor" href="#createdateformitem" aria-hidden="true">#</a> <code>createDateFormItem</code></h3><p>基于<a href="#createformfielditem">createFormFieldItem</a>函数定制，用于创建日期选择器表单项配置数据。</p><p><strong>类型定义</strong>:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">reateDateFormItem</span><span class="token punctuation">(</span>labelOrProps<span class="token punctuation">,</span> prop<span class="token punctuation">,</span> <span class="token punctuation">[</span>typeOrFieldProps<span class="token punctuation">,</span> fieldExtra<span class="token punctuation">,</span> extraProps<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>参数</strong>:</p><ul><li><code>labelOrProps</code> {String/Object} 表单项的label字符串，或者props参数对象</li><li><code>prop</code> {String} 配置对象的prop属性</li><li><code>typeOrFieldProps</code> {String/Object} 时间选择器的类型，可选值有&#39;date&#39;、&#39;daterange&#39;，也可以传入完整对象</li><li><code>fieldExtra</code> {Object} 配置对象的field对象中的其他属性，可覆盖已配置属性</li><li><code>extraProps</code> {Object} 配置对象中的其他属性，可覆盖已配置属性</li></ul><div class="custom-container tip"><p class="custom-container-title">type值说明</p><p>date：默认时间选择组件，设定绑定值为数字时间戳 daterange：日期范围选择，设定绑定值格式为日期字符串数组</p></div><h3 id="createtablecolumn" tabindex="-1"><a class="header-anchor" href="#createtablecolumn" aria-hidden="true">#</a> <code>createTableColumn</code></h3><p>用于创建简单表格列配置数据对象。</p><p><strong>类型定义</strong>:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">reateTableColumn</span><span class="token punctuation">(</span>label<span class="token punctuation">,</span> prop<span class="token punctuation">[</span><span class="token punctuation">,</span> others<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>参数</strong>:</p><ul><li><code>label</code> {String} 列配置对象label属性</li><li><code>prop</code> {String} 配置对象的prop属性</li><li><code>others</code> {Object} 配置对象中的其他属性，可覆盖已配置属性</li></ul><p><strong>返回值</strong>: object</p>`,68);function m(a,k){return t(),p("div",null,[n("div",i,[r,n("p",null,[s("下文中 "),d,s(" 不是真实包名，指代当前ui库相关的库: "+o(a.CUR_LIB_NAME),1)])]),u])}const b=e(c,[["render",m],["__file","optionals.html.vue"]]);export{b as default};
