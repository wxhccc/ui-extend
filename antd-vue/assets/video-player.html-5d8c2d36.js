import{_ as o,M as s,p as d,q as i,N as a,V as r,R as c,Q as t,t as e,a1 as h}from"./framework-d784189f.js";const _={},f=t("h2",{id:"videoplayer-视频播放器",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#videoplayer-视频播放器","aria-hidden":"true"},"#"),e(" VideoPlayer 视频播放器")],-1),p=t("p",null,"简单的视频播放器，基于video.js的vue版本基础封装。后续会进行更精细得组件化。",-1),u=t("h3",{id:"基础用法",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#基础用法","aria-hidden":"true"},"#"),e(" 基础用法")],-1),x=t("p",null,"本示例裁剪后将在新窗口打开裁剪后的图片",-1),m=t("div",{class:"language-vue line-numbers-mode","data-ext":"vue"},[t("pre",{class:"language-vue"},[t("code",null,"File not found")]),t("div",{class:"line-numbers","aria-hidden":"true"})],-1),y={class:"custom-container tip"},g=t("p",{class:"custom-container-title"},"说明",-1),v={href:"https://www.npmjs.com/package/video.js",target:"_blank",rel:"noopener noreferrer"},b={href:"https://docs.videojs.com/",target:"_blank",rel:"noopener noreferrer"},k=h('<h3 id="attributes" tabindex="-1"><a class="header-anchor" href="#attributes" aria-hidden="true">#</a> Attributes</h3><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th><th style="text-align:left;">可选值</th><th style="text-align:left;">默认值</th></tr></thead><tbody><tr><td style="text-align:left;">src</td><td style="text-align:left;">string</td><td style="text-align:left;">视频地址，也可以通过options设置多种类型资源地址</td><td style="text-align:left;">--</td><td style="text-align:left;">--</td></tr><tr><td style="text-align:left;">poster</td><td style="text-align:left;">string</td><td style="text-align:left;">视频封面图</td><td style="text-align:left;">--</td><td style="text-align:left;">--</td></tr><tr><td style="text-align:left;">options</td><td style="text-align:left;">object</td><td style="text-align:left;">插件的配置对象，可以设置所有文档支持的配置，且可以组件覆盖默认配置</td><td style="text-align:left;">--</td><td style="text-align:left;">--</td></tr></tbody></table><div class="custom-container tip"><p class="custom-container-title">提示</p><p>组件的实例上的$player属性为插件的实例，可以调用插件的方法或获取插件的属性。$player在播放器插件初始化完成后才能正常访问。</p></div>',3);function V(j,N){const n=s("comp-demo"),l=s("ExternalLinkIcon");return d(),i("div",null,[f,p,u,x,a(n,{name:"base"},{default:r(()=>[m]),_:1}),c(` ### 使用视频指定帧作为预览图

::: demo frame-poster
@[code](@demo/video-player/$LIB_DIR/frame-poster.vue)
::: `),t("div",y,[g,t("p",null,[e("此组件是基于"),t("a",v,[e("video.js"),a(l)]),e("的封装，并预留了足够的接口让你可到达核心插件，关于插件的详细文档可参阅"),t("a",b,[e("docs"),a(l)]),e(". 在此感谢原作者。")])]),k])}const B=o(_,[["render",V],["__file","video-player.html.vue"]]);export{B as default};
